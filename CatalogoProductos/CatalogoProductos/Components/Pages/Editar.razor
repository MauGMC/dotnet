@page "/edit/{id:int}"
@inject IProductosRepo Repository 
@inject NavigationManager Navigacion
<PageTitle>
	Editar
</PageTitle>
<h3>Editar un elemento</h3>
@if(Productos is not null)
{
	<div class="row justify-content-center">
		<div class="col-6">
			<EditForm Enhance="true" method="post" FormName="EditarProductoForm" OnValidSubmit="EditarProducto" Model="Productos" autocompletion="off">
				<h3>
					Editemos un producto @Id
				</h3>
				<input type="hidden" name="Productos.Id" value="@Productos.ID_prod"/> 
				<div class="mb-3">
					<label for="nombre" class="form-label">
						Nombre del producto
					</label>
					<InputText id="nombre" @bind-value="Productos.Nombre" class="form-control shadow-none" />
				</div>
				<div class="mb-3">
					<label for="descripcion" class="form-label">
						Descripción del producto
					</label>
					<InputText id="descripcion" @bind-value="Productos.Descripcion" class="form-control shadow-none" />
				</div>
				<div class="mb-3">
					<label for="precio" class="form-label">
						Precio del producto
					</label>
					<InputNumber id="precio" @bind-value="Productos.Precio" class="form-control shadow-none" />
				</div>
				<div class="mb-3">
					<label for="cantidad" class="form-label">
						Cantidad del producto
					</label>
					<InputNumber id="cantidad" @bind-value="Productos.Cantidad" class="form-control shadow-none" />
				</div>
				<div class="mb-3">
					<label for="categoria" class="form-label">
						Cantidad del producto
					</label>
					<InputSelect id="categoria" @bind-Value="Productos.Categorias" class="form-control shadow-none">
						<option value="0">
							Seleccionar categoría...
						</option>
						@foreach (var categoria in Enum.GetValues(typeof(Categorias)))
						{
							<option value="@categoria">
								@categoria.ToString()
							</option>
						}
					</InputSelect>
					<div class="mb-3">
						<button class="btn btn-primary shadow-none">
							Enviar
						</button>
						<a href="/" class="btn btn-secondary shadow-none ms-3">
							Ir al mostrado
						</a>
					</div>
					<DataAnnotationsValidator />
					<ValidationSummary />
				</div>
			</EditForm>
		</div>
	</div>
}
@code {
	[Parameter]
	public int Id{ get; set; }
	[SupplyParameterFromForm]
	public Productos Productos{ get; set; }
	protected override async Task OnInitializedAsync()
	{
		Productos ??= await Repository.GetById(Id);
	}
	private async Task EditarProducto()
	{
		if(Productos is not null)
		{
			await Repository.UpdateAsync(Productos);
			Navigacion.NavigateTo("/");
		}
	}
}
