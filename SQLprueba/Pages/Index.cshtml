@page
@using Entidades
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<script src="~/lib/jquery/dist/jquery.js"></script>
<link rel="stylesheet" href="~/css/datatables.css" />
<link rel="stylesheet" href="~/css/buttons.dataTables.css" />
<link rel="stylesheet" href="~/css/select.dataTables.css" />
<link rel="stylesheet" href="~/css/sweetalert2.css"/>
<script src="~/js/sweetalert2.all.min.js"></script>
<script src="~/js/dataTables.js"></script>
<script src="~/js/buttons.dataTables.js"></script>
<script src="~/js/select.dataTables.js"></script>


<div class="text-center">
    <table id="Productos" class="display" border="1">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Descripcion</th>
                <th>Precios</th>
                <th>Cantidad</th>
                <th>Categorias</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.productos != null && Model.productos.Rows.Count > 0)
            {
                @for (int i = 0; i < Model.productos.Rows.Count; i++)
                {
                    <tr>
                        @for (int j = 0; j < Model.productos.Columns.Count; j++)
                        {
                            <td>@Model.productos.Rows[i][j]</td>
                        }
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6">No hay productos disponibles.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<!-- Modal de Bootstrap vacío al principio -->
<div class="modal fade" id="AgregarModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @await Html.PartialAsync("AgregarModal", Model.agregarModal)
        </div>
    </div>
</div>

<div class="modal fade" id="EditarModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @await Html.PartialAsync("EditarModal", Model.editarModal)
        </div>
    </div>
</div>

<div class="modal fade" id="EliminarModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @await Html.PartialAsync("EliminarModal", Model.eliminarModal)
        </div>
    </div>
</div>

<script>
        
            var tabla = new DataTable("#Productos", {
        layout: {
            topStart: {
                buttons: [
                    {
                        text: 'Agregar',
                        action: function () {
                            const modal = new bootstrap.Modal(document.getElementById('AgregarModal'));
                            modal.show();
                        },
                        className: 'btn btn-sm btn-primary',
                        enabled: true
                    },
                    {
                        text: 'Editar',
                        action: function () {
                            const modal = new bootstrap.Modal(document.getElementById('EditarModal'));
                            modal.show();
                        },
                        className: 'btn btn-sm btn-warning',
                        enabled: false
                    },
                    {
                        text: 'Eliminar',
                        action: function (e, dt, node, config) {
                            const selectedData = tabla.rows({ selected: true }).data()[0]; // Obtener los datos de la fila seleccionada

                            // Verificar qué datos hay en selectedData
                            console.log(selectedData);  // Esto debería mostrar el objeto con el ID

                            if (selectedData) {
                                const idProducto = selectedData["ID producto"] || selectedData[0];  // Acceder a la propiedad "ID producto" correctamente

                                Swal.fire({
                                    title: `¿Seguro que deseas eliminar el item con ID ${idProducto}?`,
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonText: 'Sí, eliminar',
                                    cancelButtonText: 'Cancelar'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        // Realizamos la llamada AJAX para eliminar el producto
                                                   $.ajax({
                                                    url: '/Index?handler=EliminarProducto',
                                                    method: 'POST',
                                                    data: { id: idProducto },  // <- Aquí simplemente mandas { id: 5 }
                                                    success: function (respuesta) {
                                                        Swal.fire('¡Eliminado!', respuesta.mensaje, 'success');
                                                        location.reload();
                                                    },
                                                    error: function (xhr) {
                                                        Swal.fire('Error', xhr.responseText || 'No se pudo eliminar el producto.', 'error');
                                                    }
                                                });

                                    }
                                });
                            } else {
                                Swal.fire('Error', 'No se pudo obtener los datos del producto.', 'error');
                            }
                        },
                        className: 'btn btn-sm btn-danger',
                        enabled: false // Deshabilitado al principio
                    }
                ]
            }
        },
        select: {
            style: 'single'
        },
        paging: true
    });

    $('#Productos tbody').on('click', 'tr', function () {
            var data = tabla.row(this).data(); // Obtiene los datos de la fila seleccionada
            if (data) {
                // Mostrar los datos en los inputs del modal de edición
                $('#editar-id').val(data[0]);  // Asume que el ID está en la primera columna
                $('#editar-nombre').val(data[1]);  // Asume que el nombre está en la segunda columna
                $('#editar-descripcion').val(data[2]);  // Asume que la descripción está en la tercera columna
                $('#editar-precio').val(data[3]);  // Asume que el precio está en la cuarta columna
                $('#editar-cantidad').val(data[4]);  // Asume que la cantidad está en la quinta columna
                $('#editar-categoria').val(data[5]);  // Asume que la categoría está en la sexta columna
            }
        });
    // Habilitar/Deshabilitar Editar y Eliminar según selección
    tabla.on('select deselect', function () {
        const selected = tabla.rows({ selected: true }).count() === 1;
        tabla.button(1).enable(selected); // Editar
        tabla.button(2).enable(selected); // Eliminar
    });
    if (data) {
        document.getElementById("editar-titulo").textContent = `Editar el producto con ID #${data[0]}`;
    }
</script>


